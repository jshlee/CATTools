import FWCore.ParameterSet.Config as cms

def computeAverageSF(set1, lumi1, set2, lumi2):
    sfSet = set1.clone()

    w1 = lumi1/(lumi1+lumi2)
    w2 = lumi2/(lumi1+lumi2)
    for i in range(len(sfSet.values)):
        wv1, wv2 = w1*set1.values[i], w2*set2.values[i]
        we1, we2 = w1*set1.errors[i], w2*set2.errors[i]
        sfSet.values[i] = wv1+wv2
        sfSet.errors[i] = (we1*we1 + we2*we2)**0.5

    return sfSet

def combineSF(set1, set2, additionalUnc1=0, additionalUnc2=0):
    from bisect import bisect_right

    ## build pt bins (x axis)
    binsX1, binsX2 = set1.pt_bins[:], set2.pt_bins[:]
    nbinsX1, nbinsX2 = len(binsX1), len(binsX2)
    binsX = sorted(list(set().union(binsX1, binsX2)))

    ## build (abs) eta bins (y axis)
    isAbsEta1 = hasattr(set1, 'abseta_bins')
    isAbsEta2 = hasattr(set2, 'abseta_bins')
    binNameY, binNameY1, binNameY2 = 'eta_bins', 'eta_bins', 'eta_bins'
    if isAbsEta1: binNameY1 = 'abseta_bins'
    if isAbsEta2: binNameY2 = 'abseta_bins'
    if isAbsEta1 == isAbsEta2 == True: binNameY = 'abseta_bins'

    binsY1 = getattr(set1, binNameY1)[:]
    binsY2 = getattr(set2, binNameY2)[:]
    nbinsY1, nbinsY2 = len(binsY1), len(binsY2)
    if isAbsEta1 == isAbsEta2:
        binsY = sorted(list(set().union(binsY1, binsY2)))
    else:
        print "Expanding bins"
        binsY = sorted(list(set().union(binsY1, [-y for y in binsY1],
                                        binsY2, [-y for y in binsY2])))

    values, errors = [], []
    for y in binsY[:-1]:
        y1, y2 = y, y
        if isAbsEta1 and not isAbsEta2: y1 = abs(y)
        if isAbsEta2 and not isAbsEta1: y2 = abs(y)

        binY1 = bisect_right(binsY1, y1)
        binY2 = bisect_right(binsY2, y2)
        for x in binsX[:-1]:
            binX1 = bisect_right(binsX1, x)
            binX2 = bisect_right(binsX2, x)

            value1, value2, error1, error2 = 1, 1, 0, 0

            if 0 < binX1 < nbinsX1 and 0 < binY1 < nbinsY1:
                bin1 = (binX1-1)+(binY1-1)*(nbinsX1-1)
                value1 = set1.values[bin1]
                error1 = set1.errors[bin1]
            if 0 < binX2 < nbinsX2 and 0 < binY2 < nbinsY2:
                bin2 = (binX2-1)+(binY2-1)*(nbinsX2-1)
                value2 = set2.values[bin2]
                error2 = set2.errors[bin2]

            addErr1 = additionalUnc1*value1
            addErr2 = additionalUnc2*value2

            values.append(value1*value2)
            errors.append((error1**2+error2**2+addErr1**2+addErr2**2)**0.5)

    sfSet = cms.PSet(
        pt_bins = cms.vdouble(binsX),
        values = cms.vdouble(values),
        errors = cms.vdouble(errors),
    )
    setattr(sfSet, binNameY, cms.vdouble(binsY))

    return sfSet

dummySF = cms.PSet(
    pt_bins = cms.vdouble(0,1e9),
    abseta_bins = cms.vdouble(0,1e9),
    eta_bins = cms.vdouble(-1e9,1e9),
    values = cms.vdouble(1.0),
    errors = cms.vdouble(0.0),
)

## Muon SF reference https://twiki.cern.ch/twiki/bin/view/CMS/MuonWorkInProgressAndPagResults
## SF for Run2016BCDE, before HIP issue
muonSFTrackingOnly = cms.PSet(
    pt_bins = cms.vdouble(10, 10000),
    eta_bins = cms.vdouble(-2.400000, -2.100000, -1.600000,-1.200000,-0.900000,-0.600000,-0.300000,-0.200000,0.200000,0.300000,0.600000,0.900000,1.200000,1.600000,2.100000,2.400000,),
    values = cms.vdouble(
        1.000085,
        0.997879,
        0.998387,
        0.998666,
        0.999174,
        0.999416,
        0.999280,
        0.999405,
        0.999678,
        0.999544,
        0.999311,
        0.998382,
        0.997051,
        0.998565,
        0.998243,
    ),
    errors = cms.vdouble(
        0.000871,
        0.000246,
        0.000206,
        0.000227,
        0.000111,
        0.000106,
        0.000182,
        0.000081,
        0.000190,
        0.000107,
        0.000118,
        0.000227,
        0.000218,
        0.000226,
        0.000849,
    ),
)

## SF for Run2016G-H, after HIP issue
muonSFTrackingGHOnly = cms.PSet(
    pt_bins = cms.vdouble(10, 10000),
    eta_bins = cms.vdouble(-2.400000, -2.100000, -1.600000,-1.200000,-0.900000,-0.600000,-0.300000,-0.200000,0.200000,0.300000,0.600000,0.900000,1.200000,1.600000,2.100000,2.400000,),
    values = cms.vdouble(
        0.982741,
        0.992149,
        0.994382,
        0.995412,
        0.995896,
        0.995767,
        0.994363,
        0.994700,
        0.995835,
        0.997718,
        0.997370,
        0.996884,
        0.993423,
        0.991586,
        0.976802,
    ),
    errors = cms.vdouble(
        0.001011,
        0.000252,
        0.000227,
        0.000266,
        0.000123,
        0.000119,
        0.000233,
        0.000099,
        0.000224,
        0.000109,
        0.000120,
        0.000255,
        0.000236,
        0.000241,
        0.001033,
    ),
)


## SF for Run2016BCDE, before HIP issue
muonSFTightIdOnly = cms.PSet(
    pt_bins = cms.vdouble(20.000000, 25.000000, 30.000000, 40.000000, 50.000000, 60.000000, 120.000000,),
    abseta_bins = cms.vdouble(0.000000, 0.900000, 1.200000, 2.100000, 2.400000,),
    values = cms.vdouble(
        0.980779, 0.979747, 0.981756, 0.982723, 0.979586, 0.992805,
        0.961656, 0.959323, 0.965162, 0.967988, 0.969637, 0.967575,
        0.982584, 0.982259, 0.984453, 0.987816, 0.985261, 0.988935,
        0.970229, 0.969708, 0.967787, 0.970770, 0.967764, 0.963107,
    ),
    errors = cms.vdouble(
        0.002778, 0.001092, 0.000380, 0.000290, 0.000900, 0.002036,
        0.003445, 0.002070, 0.002116, 0.000499, 0.001376, 0.002804,
        0.001669, 0.000842, 0.000324, 0.000274, 0.000907, 0.002019,
        0.003056, 0.001790, 0.000959, 0.003717, 0.002790, 0.005782,
    ),
)

## SF for Run2016G-H, after HIP issue
muonSFTightGHIdOnly = cms.PSet(
    pt_bins = cms.vdouble(20.000000, 25.000000, 30.000000, 40.000000, 50.000000, 60.000000, 120.000000,),
    abseta_bins = cms.vdouble(0.000000, 0.900000, 1.200000, 2.100000, 2.400000,),
    values = cms.vdouble(
        0.993173, 0.986990, 0.987596, 0.989777, 0.984749, 0.991370,
        0.985596, 0.984686, 0.983914, 0.983265, 0.980582, 0.983879,
        0.990863, 0.990917, 0.992066, 0.993847, 0.985655, 0.988584,
        0.981501, 0.979109, 0.971526, 0.974776, 0.967651, 0.963199,
    ),
    errors = cms.vdouble(
        0.002642, 0.046316, 0.000369, 0.000300, 0.000785, 0.001626,
        0.015529, 0.001699, 0.000600, 0.000467, 0.001423, 0.002968,
        0.001871, 0.000941, 0.020594, 0.000274, 0.001019, 0.002380,
        0.003092, 0.053287, 0.002042, 0.006083, 0.002817, 0.005718,
    ),
)
## SF for Run2016BCDE, before HIP issue
muonSFTightIsoOnly = cms.PSet(
    pt_bins = cms.vdouble(20.000000, 25.000000, 30.000000, 40.000000, 50.000000, 60.000000, 120.000000,),
    abseta_bins = cms.vdouble(0.000000, 0.900000, 1.200000, 2.100000, 2.400000,),
    values = cms.vdouble(
        0.987723, 0.993733, 0.994052, 0.995378, 0.996878, 0.998548,
        0.993162, 1.001004, 0.999295, 0.997179, 0.999354, 0.999297,
        0.989717, 0.994223, 0.997134, 0.997531, 0.997972, 0.999017,
        0.975341, 0.985961, 0.993083, 0.996770, 0.997456, 1.001517,
    ),
    errors = cms.vdouble(
        0.002236, 0.001190, 0.000385, 0.000215, 0.000363, 0.000463,
        0.003570, 0.002053, 0.000699, 0.000005, 0.000599, 0.000771,
        0.001684, 0.000995, 0.000381, 0.000159, 0.000338, 0.000456,
        0.002945, 0.001762, 0.000687, 0.000437, 0.000766, 0.001126,
    ),
)

## SF for Run2016G-H, after HIP issue
muonSFTightGHIsoOnly = cms.PSet(
    pt_bins = cms.vdouble(20.000000, 25.000000, 30.000000, 40.000000, 50.000000, 60.000000, 120.000000,),
    abseta_bins = cms.vdouble(0.000000, 0.900000, 1.200000, 2.100000, 2.400000,),
    values = cms.vdouble(
        0.981144, 0.992791, 0.993452, 0.995200, 0.996716, 0.999064,
        0.997662, 0.999726, 0.999598, 0.998324, 0.998887, 0.998908,
        0.993687, 0.997960, 0.998980, 0.998603, 0.998800, 0.999453,
        0.994233, 0.999098, 1.000063, 1.000221, 1.000003, 1.001529,
    ),
    errors = cms.vdouble(
        0.002283, 0.001220, 0.000396, 0.000130, 0.000374, 0.000472,
        0.003563, 0.002081, 0.000705, 0.000300, 0.000611, 0.000794,
        0.001676, 0.001003, 0.000380, 0.000008, 0.000340, 0.000461,
        0.002858, 0.001746, 0.000692, 0.000260, 0.000787, 0.001123,
    ),
)


## Muon SF reference https://twiki.cern.ch/twiki/bin/viewauth/CMS/MuonReferenceEffsRun2
## Retrieve data from the cmsdoc web page:
##   https://cmsdoc.cern.ch/cms/Physics/muon/ReferenceEfficiencies/Run2015/25ns/MuonID_Z_RunCD_Reco76X_Feb15.json
##   https://cmsdoc.cern.ch/cms/Physics/muon/ReferenceEfficiencies/Run2015/25ns/MuonIso_Z_RunCD_Reco76X_Feb15.json
muonSFTight76X = cms.PSet(
    # Values of "MC_NUM_TightIDandIPCut_DEN_genTracks_PAR_pt_spliteta_bin1 + MC_NUM_TightRelIso_DEN_TightID_PAR_pt_spliteta_bin1"
    pt_bins = cms.vdouble(20, 25, 30, 40, 50, 60, 120),
    abseta_bins = cms.vdouble(0, 0.9, 1.2, 2.1, 2.4),
    values = cms.vdouble(
        0.975283, 0.980129, 0.986676, 0.985789, 0.980877, 0.985445,
        0.984484, 0.970783, 0.980673, 0.980057, 0.977943, 0.984907,
        0.986784, 0.990845, 0.993367, 0.990324, 0.988209, 0.991915,
        0.971296, 0.971883, 0.976009, 0.977, 0.973655, 0.963135,
    ),
    errors = cms.vdouble(
        0.0157468, 0.0136165, 0.0120878, 0.0118247, 0.0125879, 0.0135921,
        0.0181504, 0.0154891, 0.0127943, 0.0121561, 0.0134922, 0.0152142,
        0.0145121, 0.0132486, 0.0120305, 0.0116593, 0.0124603, 0.0137997,
        0.0176168, 0.0153647, 0.0131657, 0.0126734, 0.0148934, 0.0197265,
    ),

)

## Electron SF from https://twiki.cern.ch/twiki/bin/viewauth/CMS/EgammaIDRecipesRun2#Efficiencies_and_scale_factors
## root file is retrieved from 
##  Reco: http://fcouderc.web.cern.ch/fcouderc/EGamma/scaleFactors/Moriond17/approval/RECO/passingRECO/egammaEffi.txt_EGM2D.root 
##   ID: http://fcouderc.web.cern.ch/fcouderc/EGamma/scaleFactors/Moriond17/approval/EleID/passingMedium80X/egammaEffi.txt_EGM2D.root 
electronSFRecoOnly = cms.PSet(
    pt_bins = cms.vdouble(25.000000, 500.000000,),
    eta_bins = cms.vdouble(-2.500000, -2.450000, -2.400000, -2.300000, -2.200000, -2.000000, -1.800000, -1.630000, -1.566000, -1.444000, -1.200000, -1.000000, -0.600000, -0.400000, -0.200000, 0.000000, 0.200000, 0.400000, 0.600000, 1.000000, 1.200000, 1.444000, 1.566000, 1.630000, 1.800000, 2.000000, 2.200000, 2.300000, 2.400000, 2.450000, 2.500000,),
    values = cms.vdouble(
        1.317604,
        1.113780,
        1.024625,
        1.013641,
        1.007277,
        0.994819,
        0.994786,
        0.991632,
        0.963129,
        0.989701,
        0.985656,
        0.981595,
        0.984678,
        0.981614,
        0.980433,
        0.984552,
        0.988764,
        0.987743,
        0.987743,
        0.987743,
        0.987680,
        0.967598,
        0.989627,
        0.992761,
        0.991761,
        0.997940,
        1.001037,
        0.989507,
        0.970519,
        0.907,
        ),
    errors = cms.vdouble(
        0.018239,
        0.011067,
        0.008158,
        0.007133,
        0.004203,
        0.006493,
        0.005166,
        0.005512,
        0.026030,
        0.003599,
        0.005064,
        0.003312,
        0.006129,
        0.006358,
        0.005302,
        0.005302,
        0.006358,
        0.006129,
        0.003312,
        0.005064,
        0.003599,
        0.026030,
        0.005512,
        0.005166,
        0.006493,
        0.004203,
        0.007133,
        0.008158,
        0.011067,
        0.018239,
        ),
)
electronSFCutBasedIDMediumWPIdOnly = cms.PSet(
    pt_bins = cms.vdouble(10.000000,20.000000,35.000000,50.000000,90.000000,150.000000,500.000000),
    eta_bins = cms.vdouble(-2.500000,-2.000000,-1.566000,-1.444000,-0.800000,0.000000,0.800000,1.444000,1.566000,2.000000,2.500000),
    values = cms.vdouble(
        0.820574, 0.914201, 0.955919, 0.974940, 1.040745, 1.040745,
        0.822650, 0.943662, 0.979369, 0.991908, 1.018059, 1.018059,
        1.027119, 1.000000, 0.985653, 0.987838, 1.086614, 1.086614,
        0.959108, 0.958556, 0.969767, 0.972129, 0.993363, 0.993363,
        0.922027, 0.946164, 0.956725, 0.958427, 0.985588, 0.985588,
        0.939571, 0.971467, 0.979882, 0.979569, 1.018038, 1.018038,
        0.966480, 0.972973, 0.976608, 0.982022, 1.018059, 1.018059,
        0.993399, 0.966270, 0.970000, 0.986395, 1.015605, 1.015605,
        0.853659, 0.930496, 0.973430, 0.985006, 0.997750, 0.997750,
        0.815385, 0.891273, 0.942928, 0.967098, 1.015222, 1.015222,
        ),
    errors = cms.vdouble(
        0.023166, 0.008260, 0.007552, 0.005656, 0.029675, 0.029866,
        0.018241, 0.012760, 0.005869, 0.005066, 0.011225, 0.011722,
        0.068255, 0.179759, 0.012664, 0.014144, 0.035429, 0.035590,
        0.050900, 0.011640, 0.004441, 0.012475, 0.008380, 0.009034,
        0.026763, 0.012595, 0.004033, 0.011094, 0.010382, 0.010917,
        0.026763, 0.012595, 0.004033, 0.011094, 0.010382, 0.010917,
        0.050900, 0.011640, 0.004441, 0.012475, 0.008380, 0.009034,
        0.068255, 0.179759, 0.012664, 0.014221, 0.035289, 0.035450,
        0.018241, 0.012760, 0.005869, 0.005066, 0.011225, 0.011722,
        0.023166, 0.008260, 0.007552, 0.005491, 0.029675, 0.029866,
        ),
)
electronSFCutBasedIDTightWPIdOnly = cms.PSet(
    pt_bins = cms.vdouble(10, 20, 35, 50, 90, 150, 500,),
    eta_bins = cms.vdouble(-2.5, -2, -1.566, -1.444, -0.8, 0, 0.8, 1.444, 1.566, 2, 2.5,),
    values = cms.vdouble(
        0.806557, 0.882459, 0.918841, 0.940397, 1.05109, 1.05109, 
        0.828571, 0.927487, 0.966988, 0.980964, 1.00592, 1.00592, 
        1.03286, 1.00759, 0.988196, 0.995392, 1.10411, 1.10411, 
        1.00775, 0.972039, 0.974667, 0.971675, 0.989486, 0.989486, 
        0.940722, 0.952998, 0.953457, 0.953086, 0.975496, 0.975496, 
        0.945876, 0.981997, 0.979812, 0.977528, 1.01189, 1.01189, 
        0.98977, 0.975207, 0.974633, 0.978934, 1.01073, 1.01073, 
        1.03398, 0.974874, 0.966387, 0.979907, 1.00716, 1.00716, 
        0.827485, 0.908938, 0.957823, 0.968553, 0.988263, 0.988263, 
        0.797015, 0.863322, 0.907801, 0.937662, 1.02136, 1.02136, 
    ),
    errors = cms.vdouble(
        0.0180196, 0.0101198, 0.00903908, 0.00700136, 0.0222742, 0.0224318, 
        0.0182791, 0.0176261, 0.00730306, 0.00561478, 0.0215596, 0.0217223, 
        0.106279, 0.109913, 0.0166871, 0.0240068, 0.0495689, 0.0496399, 
        0.0272663, 0.0132931, 0.00686833, 0.0186735, 0.00867578, 0.00907265, 
        0.025741, 0.0150816, 0.00472981, 0.0168857, 0.0126071, 0.0128834, 
        0.025741, 0.0150816, 0.00472981, 0.0168857, 0.0127268, 0.0130006, 
        0.0272663, 0.0132931, 0.00686833, 0.0186735, 0.0088888, 0.00927657, 
        0.106279, 0.109913, 0.0166871, 0.0240068, 0.049435, 0.0495061, 
        0.0182791, 0.0176261, 0.00730306, 0.00561478, 0.0215596, 0.0217223, 
        0.0180196, 0.0101198, 0.00903908, 0.00700136, 0.0222742, 0.0224318, 
    ),
)
## Electorn SF from http://fcouderc.web.cern.ch/fcouderc/EGamma/scaleFactors/moriond2016_76X/eleCutBasedID/CutBasedID_MediumWP_76X_18Feb.txt_egammaPlots.pdf
electronSFCutBasedIDMediumWP76X = cms.PSet(
    # Values of "CutBasedID_MediumWP"
    pt_bins = cms.vdouble(10, 20, 30, 40, 50, 200),
    abseta_bins = cms.vdouble(0, 0.8, 1.444, 1.566, 2, 2.5),
    values = cms.vdouble(
        1.00726, 0.971182, 0.984906, 0.985899, 0.988598,
        1.0902, 0.983359, 0.987179, 0.98692, 0.986159,
        1.08642, 0.963054, 0.949123, 0.981612, 0.997257,
        0.984444, 0.936809, 0.975066, 0.992806, 1.00579,
        1.03557, 0.986446, 0.963351, 1.00611, 1.00949,
    ),
    errors = cms.vdouble(
        0.0656124, 0.0279776, 0.0291216, 0.0175478, 0.00603364,
        0.0391175, 0.0256741, 0.0171527, 0.0277844, 0.00540994,
        0.0800687, 0.261884 , 0.0511487, 0.036227 , 0.113466  ,
        0.0447765, 0.0186922, 0.0274652, 0.0404665, 0.0125727 ,
        0.0303603, 0.0263447, 0.0445603, 0.0103732, 0.0137829 ,
    ),
)

## Retrieve data from the cmsdoc web page:
##   https://cmsdoc.cern.ch/cms/Physics/muon/ReferenceEfficiencies/Run2015/25ns/MuonID_Z_RunCD_Reco74X_Dec1.json
muonSFTight74X = cms.PSet(
    # Values of "NUM_TightIDandIPCut_DEN_genTracks_PAR_pt_spliteta_bin1 + NUM_TightRelIso_DEN_TightID_PAR_pt_spliteta_bin1"
    pt_bins = cms.vdouble(20, 25, 30, 40, 50, 60, 120),
    abseta_bins = cms.vdouble(0, 0.9, 1.2, 2.1, 2.4),
    values = cms.vdouble(
        0.979479, 0.984375, 0.987068, 0.986086, 0.983674, 0.985021,
        0.978054, 0.980927, 0.984458, 0.981568, 0.975983, 0.984876,
        0.99541, 0.991193, 0.994704, 0.992697, 0.988925, 0.995536,
        0.983608, 0.974278, 0.976037, 0.980598, 0.969666, 0.969941,
    ),
    errors = cms.vdouble(
        0.0191201, 0.0168928, 0.0151444, 0.0148111, 0.015527, 0.0162596,
        0.021688, 0.0189092, 0.0159175, 0.0150692, 0.0164092, 0.0178394,
        0.0179975, 0.0166027, 0.0151404, 0.0147407, 0.0154785, 0.0167413,
        0.0219747, 0.0194149, 0.0165014, 0.0159522, 0.0180924, 0.0243999,
    ),
)

electronSFWP9074X = cms.PSet(
    ## SF from https://indico.cern.ch/event/369259/contribution/3/attachments/1204731/1755463/update_SFs_triggering_MVA_ID_systematics.pdf
    eta_bins = cms.vdouble(-2.5, -1.5, -1.0, 0, 1.0, 1.5, 2.5),
    pt_bins = cms.vdouble(15, 25, 35, 45, 55, 1e9),
    values = cms.vdouble(
        0.96, 0.95, 0.98, 0.99, 0.99, 0.97,
        0.98, 0.97, 0.97, 0.99, 0.99, 0.98,
        0.98, 0.99, 0.99, 0.99, 0.99, 0.98,
        0.98, 0.99, 0.99, 0.99, 0.99, 0.99,
        0.99, 0.99, 1.00, 1.00, 0.99, 0.99,
    ),
    errors = cms.vdouble(
        0.02, 0.06, 0.01, 0.01, 0.02, 0.01,
        0.01, 0.01, 0.02, 0.01, 0.01, 0.01,
        0.00, 0.00, 0.00, 0.00, 0.00, 0.01,
        0.01, 0.00, 0.01, 0.00, 0.01, 0.01,
        0.01, 0.02, 0.01, 0.00, 0.02, 0.02,
    ),
)

electronSFCutBasedIDMediumWP74X = cms.PSet(
    ## SF from https://indico.cern.ch/event/491528/contribution/2/attachments/1231399/1805319/CutBasedId_EGM_19Feb.pdf
    ## Actual numbers are taken from https://arun-afs.web.cern.ch/arun-afs/Final_Fits_Data_74X/CutBasedID_MediumWP_fromTemplates_withSyst_Final.txt
    # Values of "CutBasedID_MediumWP"
    pt_bins = cms.vdouble(10, 20, 30, 40, 50, 200),
    eta_bins = cms.vdouble(-2.5, -2, -1.566, -1.444, -0.8, 0, 0.8, 1.444, 1.566, 2, 2.5),
    values = cms.vdouble(
        1.25131, 1.0536, 1.01235, 1.00875, 1.006,
        1.09254, 0.969453, 0.971279, 0.983313, 0.985109,
        1.29412, 1.04043, 1.02482, 0.990155, 0.948856,
        1.32673, 1.05939, 0.990897, 0.974057, 0.958097,
        1.23371, 1.02262, 0.978616, 0.969838, 0.967489,
        1.22889, 1.01799, 0.986164, 0.974448, 0.970819,
        1.30827, 1.07742, 1.00654, 0.976359, 0.964773,
        1.35498, 1.18801, 0.990991, 0.956153, 0.974394,
        1.06283, 0.980392, 0.961892, 0.978469, 0.994253,
        1.20769, 1.02649, 1.0096, 1.00125, 1.00481,
    ),
    errors = cms.vdouble(
        0.712863, 0.0517635, 0.0242599, 0.0222102, 0.0337348,
        0.662784, 0.0757762, 0.575897, 0.0392023, 0.0671983,
        3.75487, 1.17119, 0.124767, 0.0150145, 0.0555887,
        1.2277, 0.20447, 0.0280944, 0.00855398, 0.0355446,
        0.813571, 0.108281, 0.00853765, 0.0217419, 0.0302874,
        0.761126, 0.580145, 0.0313306, 0.0196618, 0.0253676,
        0.874693, 0.237932, 0.650881, 0.0103168, 0.0286228,
        4.59432, 1.84669, 0.1764, 0.0506619, 0.161535,
        0.797724, 0.0632952, 0.0377029, 0.0313089, 0.0300417,
        0.617985, 0.0693681, 0.0293348, 0.024152, 0.0894748,
    ),
)


#### Trigger SF
trigSF_IsoMu24_OR_IsoTkMu24_BtoF = cms.PSet(
    pt_bins = cms.vdouble(26, 30, 40, 50, 60, 120, 200, 500,),
    abseta_bins = cms.vdouble(0.0, 0.9, 1.2, 2.1, 2.4,),
    values = cms.vdouble(
        0.9749304056167603, 0.9784002304077148, 0.9786019325256348, 0.9794716238975525, 0.9762392044067383, 0.9716373682022095, 0.9745906591415405,
        0.9510084390640259, 0.96109539270401, 0.9623309373855591, 0.9622570872306824, 0.9599408507347107, 0.9404021501541138, 0.9270547032356262,
        0.9813432693481445, 0.994604229927063, 0.9967966675758362, 0.9964250326156616, 0.99547278881073, 1.0058729648590088, 0.9700033068656921,
        0.8999319076538086, 0.9412131905555725, 0.9530816674232483, 0.9549306035041809, 0.9439091086387634, 0.972006618976593, 0.9034812450408936,
    ),
    errors = cms.vdouble(
        0.00098389723528156, 0.0003229365043287514, 0.0002517965991936066, 0.0005494610978538173, 0.0009877298800761555, 0.005781657457724596, 0.00859503981540333,
        0.002166569453576029, 0.0005666176060135408, 0.0003763699628740865, 0.0007968529798843849, 0.0012963487914918214, 0.006503557654982247, 0.019906367435662126,
        0.0018018514476494285, 0.000607720472996522, 0.0004221602796828659, 0.0008939979485728349, 0.0014161203058623746, 0.009042723854226446, 0.030506555574081294,
        0.0037270204980831283, 0.001359540397357431, 0.0010850750276088152, 0.0023442639114234142, 0.003811007093314756, 0.037981049974968865, 0.27585130082693726,
    ),
)

trigSF_IsoMu24_OR_IsoTkMu24_GtoH = cms.PSet(
    pt_bins = cms.vdouble(26, 30, 40, 50, 60, 120, 200, 500,),
    abseta_bins = cms.vdouble(0.0, 0.9, 1.2, 2.1, 2.4,),
    values = cms.vdouble(
        0.9869807362556458, 0.9910475015640259, 0.9925955533981323, 0.992017924785614, 0.9932432770729065, 0.9813925623893738, 0.9938938021659851,
        0.9628402590751648, 0.9718958139419556, 0.9746044278144836, 0.9753977060317993, 0.9709482192993164, 0.9544392824172974, 0.9771283268928528,
        0.9839195609092712, 0.9965498447418213, 1.002132534980774, 1.0024102926254272, 1.0031641721725464, 1.0050915479660034, 0.9984261393547058,
        0.9138849377632141, 0.9486344456672668, 0.9629637598991394, 0.967069149017334, 0.9627843499183655, 0.9831149578094482, 0.9359486103057861,
    ),
    errors = cms.vdouble(
        0.0010367296534039279, 0.00033384056784941903, 0.00025684990570774754, 0.0005595740669750601, 0.0008285981939055742, 0.0040373365279612215, 0.009838154592979265,
        0.002332053828065074, 0.0005804553092205542, 0.0003811936288051262, 0.0007663329448932586, 0.0015313780212260835, 0.004843094722237152, 0.0146588187607852,
        0.001903168036651809, 0.0006317211515721738, 0.0004362327724914821, 0.0008988668944692867, 0.001450983697866551, 0.0066083877935644774, 0.018870665504796623,
        0.004035065141813026, 0.0014192255290904172, 0.0011255368180366698, 0.0023472448988226913, 0.0037436150274704452, 0.02337452284457453, 0.06148384837918422,
    ),
)

trigSF_Ele25_eta2p1_WPTight_Gsf = cms.PSet(
    ## SF from https://indico.cern.ch/event/604912/contributions/2490011/attachments/1418869/2173471/2017.02.27_EGM_Ele25-and-Ele27-trigger-SF_v1.pdf
    pt_bins = cms.vdouble(25, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 55, 60, 65, 70, 80, 90, 100, 120, 200,),
    eta_bins = cms.vdouble(-2.1, -1.8, -1.566, -1.4442, -1.1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1.1, 1.4442, 1.566, 1.8, 2.1,),
    values = cms.vdouble(),
    errors = cms.vdouble(),
)
trigSF_Ele25_eta2p1_WPTight_Gsf.values = [
    0.749116, 0.710749, 0.761333, 0.706818, 0.835365, 0.85008, 0.830067, 0.757118, 0.705707, 0.700436, 0.765075, 0.82131, 0.84044, 0.815622, 0.644099, 0.694801, 0.711485, 0.65999, 
    0.885834, 0.847881, 0.869715, 0.821651, 0.917456, 0.926303, 0.896113, 0.830703, 0.792398, 0.777762, 0.844246, 0.898517, 0.938322, 0.913734, 0.820775, 0.842008, 0.832494, 0.831292, 
    0.923468, 0.86038, 0.939305, 0.889473, 0.962588, 0.957046, 0.93829, 0.90711, 0.866359, 0.858976, 0.908534, 0.933896, 0.963268, 0.950873, 0.856513, 0.926533, 0.864578, 0.875895, 
    0.932228, 0.899557, 0.988043, 0.91244, 0.97171, 0.983522, 0.972118, 0.960224, 0.942197, 0.925634, 0.960706, 0.975193, 0.986976, 0.977911, 0.905336, 0.936304, 0.903456, 0.909305, 
    0.936291, 0.924929, 0.951587, 0.935972, 0.987586, 1.00928, 0.994553, 0.967936, 0.957585, 0.943294, 0.963282, 0.986413, 0.99546, 0.992587, 0.939294, 0.977251, 0.906085, 0.903536, 
    0.939353, 0.923131, 0.959078, 0.95324, 0.991553, 1.00281, 0.998757, 0.988686, 0.958147, 0.948976, 0.980993, 0.995381, 0.99552, 0.992854, 0.945145, 0.974759, 0.937688, 0.928825, 
    0.945868, 0.919806, 0.975022, 0.958104, 0.996774, 1.01374, 1.01048, 0.990458, 0.984436, 0.97899, 0.974288, 1.00349, 1.00309, 1.0033, 0.954156, 0.976709, 0.925761, 0.92993, 
    0.953716, 0.926874, 0.979095, 0.972901, 1.00166, 1.0095, 1.01371, 1.00033, 0.983445, 0.987504, 0.994865, 1.00529, 1.01808, 1.00615, 0.965121, 0.989463, 0.943256, 0.93268, 
    0.950887, 0.929724, 0.981405, 0.977294, 1.00499, 1.01644, 1.0155, 1.00605, 0.994648, 0.990756, 0.99467, 1.01428, 1.01239, 1.00942, 0.967738, 0.971637, 0.943091, 0.940738, 
    0.950519, 0.934982, 0.996574, 0.978322, 0.99915, 1.01389, 1.01726, 1.00211, 0.992915, 0.989936, 0.988578, 1.00572, 1.00709, 1.00567, 0.975829, 0.996746, 0.950798, 0.941825, 
]+[
    0.946903, 0.951902, 0.96202, 0.98378, 0.999808, 1.01212, 1.01672, 1.00039, 0.994902, 0.992212, 0.99312, 1.00378, 1.00941, 1.00243, 0.974724, 0.986224, 0.958252, 0.945564, 
    0.937224, 0.938897, 0.960013, 0.98225, 0.998577, 1.01382, 1.00338, 1.00328, 0.994218, 0.98366, 0.994585, 0.994989, 1.00292, 0.999087, 0.983995, 0.976693, 0.944625, 0.942547, 
    0.953976, 0.944829, 0.990295, 0.978921, 0.997277, 1.00414, 1.01084, 0.997958, 0.996635, 0.993592, 0.99186, 1.00394, 1.00155, 1.00018, 0.97589, 0.990122, 0.948701, 0.94101, 
    0.951248, 0.940163, 0.962102, 0.968986, 0.990374, 0.999772, 0.99676, 0.997418, 0.994846, 0.999325, 0.997314, 0.989851, 0.998023, 1.00027, 0.982874, 1.01, 0.957773, 0.932715, 
    0.964094, 0.928765, 0.981145, 0.973266, 0.99261, 1.00193, 1.00012, 0.98916, 0.981177, 0.983463, 0.984674, 0.977817, 1.00031, 0.983254, 0.976459, 0.944968, 0.967033, 0.958762, 
    0.930807, 0.928785, 0.950404, 0.972797, 1.00273, 0.991936, 0.997751, 1.00462, 0.985162, 0.989998, 0.999034, 0.991843, 0.981114, 1.0006, 0.987479, 0.92584, 0.920968, 0.92665, 
    0.932776, 0.944006, 1.0427, 0.977407, 0.97995, 0.994976, 0.992931, 0.99748, 0.999833, 0.986372, 0.982235, 0.993062, 0.981283, 0.981425, 1.00665, 1.00253, 0.948822, 0.93644, 
    0.923844, 0.925333, 1.0211, 0.974088, 0.996608, 0.984424, 0.995478, 0.994735, 0.996008, 0.982649, 0.981486, 0.975993, 0.984343, 0.991969, 0.990661, 0.990014, 0.909188, 0.906654, 
    0.915111, 0.915111, 0.988727, 0.998785, 0.998785, 0.986359, 0.986359, 1.00848, 1.00848, 0.996157, 0.996157, 0.993066, 0.993066, 1.00464, 1.00464, 0.94165, 0.940153, 0.940153, 
    0.941417, 0.941417, 0.944936, 0.984101, 0.984101, 0.994754, 0.994754, 0.997433, 0.997433, 0.979605, 0.979605, 0.983342, 0.983342, 0.988026, 0.988026, 0.976749, 0.940922, 0.940922, 
    0.930927, 0.930927, 0.974576, 0.98069, 0.98069, 0.978156, 0.978156, 0.996103, 0.996103, 0.981996, 0.981996, 0.989124, 0.989124, 0.980065, 0.980065, 1.01856, 0.932938, 0.932938
]
trigSF_Ele25_eta2p1_WPTight_Gsf.errors = [
    0.0227651, 0.0222719, 0.0350417, 0.0214791, 0.0223615, 0.0227283, 0.0222842, 0.0201473, 0.0193809, 0.0198827, 0.0203001, 0.0222455, 0.0230762, 0.0208113, 0.0173259, 0.0378976, 0.0234171, 0.0200018, 
    0.0255326, 0.0253449, 0.0353739, 0.0206691, 0.0226298, 0.0236873, 0.0233691, 0.0228674, 0.0213294, 0.0220717, 0.0211592, 0.0225751, 0.0238462, 0.0222412, 0.0208403, 0.0348405, 0.0254221, 0.0236576, 
    0.0257457, 0.0232219, 0.0393105, 0.0215049, 0.0226715, 0.0241459, 0.0224954, 0.0223621, 0.0219054, 0.0210526, 0.0218603, 0.0225532, 0.0233483, 0.0224813, 0.0217589, 0.0332392, 0.0275122, 0.0233285, 
    0.0233825, 0.0230337, 0.0343425, 0.0216437, 0.0224237, 0.0234989, 0.0228296, 0.0231433, 0.0225176, 0.0220799, 0.023468, 0.0229636, 0.0233357, 0.0228059, 0.0212737, 0.0326875, 0.0270092, 0.0230709, 
    0.0228547, 0.0229945, 0.0273993, 0.0216578, 0.0230202, 0.0234699, 0.0230358, 0.022678, 0.0224648, 0.0220408, 0.022461, 0.0229646, 0.0234908, 0.022667, 0.0222662, 0.0280119, 0.0227818, 0.0227903, 
    0.0231137, 0.0251827, 0.0269281, 0.0218971, 0.0230333, 0.0229417, 0.0232163, 0.0228621, 0.0221132, 0.0229941, 0.0229591, 0.0229232, 0.0229881, 0.0225263, 0.0218261, 0.0267412, 0.023511, 0.022213, 
    0.0249508, 0.0220811, 0.0255871, 0.0218286, 0.0225597, 0.02358, 0.0230681, 0.0226297, 0.0225549, 0.0227565, 0.0223522, 0.0229806, 0.0228363, 0.0226973, 0.021656, 0.0271416, 0.0224782, 0.0217725, 
    0.0222738, 0.0218288, 0.0247827, 0.0219982, 0.0226317, 0.0231928, 0.0230843, 0.0226885, 0.022399, 0.0225134, 0.0225798, 0.023116, 0.0232258, 0.0226851, 0.0219144, 0.0309439, 0.0224118, 0.0215794, 
    0.0220247, 0.0234363, 0.0247607, 0.0222392, 0.02263, 0.0229758, 0.0229853, 0.0227637, 0.022558, 0.0225664, 0.0224986, 0.023471, 0.0231881, 0.0227891, 0.021926, 0.0239469, 0.0219032, 0.0217704, 
    0.0223465, 0.0215524, 0.024645, 0.0223293, 0.0226049, 0.0231175, 0.0230469, 0.0228897, 0.0225501, 0.0240035, 0.0226825, 0.0229806, 0.0227319, 0.0226505, 0.0227764, 0.0276561, 0.0242249, 0.0236112, 
]+[
    0.0238227, 0.0221819, 0.0243988, 0.0222562, 0.0226181, 0.0236757, 0.0232496, 0.0227176, 0.0236045, 0.022834, 0.0226149, 0.0228787, 0.0228559, 0.0227915, 0.0222477, 0.0272507, 0.0224041, 0.0227182, 
    0.0269579, 0.0236861, 0.0289861, 0.022757, 0.0226219, 0.023751, 0.0237816, 0.0232242, 0.0237623, 0.0226341, 0.0227911, 0.0226907, 0.0230371, 0.0227048, 0.022455, 0.0333748, 0.0227244, 0.0224452, 
    0.0226315, 0.0271573, 0.0343932, 0.0227218, 0.0226699, 0.0228637, 0.0231892, 0.0231712, 0.0232356, 0.0228187, 0.0227306, 0.0230195, 0.0231706, 0.0230054, 0.0221351, 0.0362863, 0.0289302, 0.0236544, 
    0.0254174, 0.0255248, 0.0359781, 0.0227298, 0.0227446, 0.0254374, 0.0261761, 0.0239268, 0.0246286, 0.0240214, 0.0240273, 0.0237976, 0.0236491, 0.0234657, 0.0228428, 0.0488995, 0.0276696, 0.0238577, 
    0.0286717, 0.0347118, 0.0532844, 0.0232706, 0.0235029, 0.0252489, 0.0279149, 0.0239343, 0.0238894, 0.0246462, 0.0247175, 0.0231103, 0.0243705, 0.0232231, 0.0233587, 0.0357741, 0.0301604, 0.0264122, 
    0.0297666, 0.0308165, 0.0442116, 0.0240596, 0.0243517, 0.0265348, 0.0264472, 0.0264286, 0.0250755, 0.0293261, 0.0280617, 0.024594, 0.0259739, 0.0238063, 0.0246828, 0.0528623, 0.0302048, 0.0283618, 
    0.026912, 0.0313582, 0.0621742, 0.0234554, 0.0231402, 0.0241053, 0.0239663, 0.0245973, 0.0257068, 0.0256357, 0.024763, 0.0241731, 0.0232971, 0.0232852, 0.0270657, 0.0759744, 0.0293276, 0.0302041, 
    0.032496, 0.0306924, 0.0834466, 0.0236614, 0.0243231, 0.0247796, 0.0251508, 0.0254239, 0.0257598, 0.0264032, 0.0248805, 0.0245997, 0.0248523, 0.024908, 0.0252232, 0.0713293, 0.0282229, 0.0273024, 
    0.0268432, 0.0268432, 0.0577184, 0.0248649, 0.0248649, 0.0240263, 0.0240263, 0.0256191, 0.0256191, 0.0246538, 0.0246538, 0.0252683, 0.0252683, 0.0241493, 0.0241493, 0.0655283, 0.0344812, 0.0344812, 
    0.0280555, 0.0280555, 0.0583017, 0.0244717, 0.0244717, 0.0240017, 0.0240017, 0.0242837, 0.0242837, 0.0238477, 0.0238477, 0.0236711, 0.0236711, 0.0233825, 0.0233825, 0.0548827, 0.0282008, 0.0282008, 
    0.0280625, 0.0280625, 0.0498968, 0.0226358, 0.0226358, 0.0227176, 0.0227176, 0.0235375, 0.0235375, 0.0230325, 0.0230325, 0.0231917, 0.0231917, 0.0225467, 0.0225467, 0.0698522, 0.0259805, 0.0259805,
]

trigSF_Ele27_WPTight_Gsf = cms.PSet(
    ## SF from https://indico.cern.ch/event/604912/contributions/2490011/attachments/1418869/2173471/2017.02.27_EGM_Ele25-and-Ele27-trigger-SF_v1.pdf
    pt_bins = cms.vdouble(25, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 55, 60, 65, 70, 80, 90, 100, 120, 200),
    eta_bins = cms.vdouble(-2.5, -2, -1.8, -1.566, -1.4442, -1.1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1.1, 1.4442, 1.566, 1.8, 2, 2.5,),
    values = cms.vdouble(),
    errors = cms.vdouble(),
)
trigSF_Ele27_WPTight_Gsf.values = [
    0.31821, 0.547538, 0.693833, 0.68974, 0.633375, 0.81664, 0.832957, 0.875251, 0.827426, 0.724263, 0.721718, 0.759378, 0.723235, 0.734891, 0.653543, 0.481539, 0.578324, 0.599212, 0.427818, 0.234031, 
    0.782007, 0.828381, 0.835286, 0.850364, 0.80035, 0.907444, 0.919195, 0.89137, 0.829784, 0.790715, 0.776099, 0.839917, 0.891413, 0.926084, 0.89393, 0.791192, 0.809543, 0.812048, 0.784887, 0.677433, 
    0.931877, 0.913517, 0.858708, 0.941945, 0.886277, 0.961851, 0.95638, 0.938702, 0.906826, 0.866906, 0.860232, 0.908013, 0.933955, 0.964368, 0.949914, 0.854648, 0.921112, 0.862146, 0.864548, 0.854598, 
    1.00008, 0.902954, 0.899146, 0.988649, 0.912227, 0.971521, 0.983737, 0.972011, 0.960305, 0.942483, 0.925685, 0.96069, 0.975059, 0.986998, 0.977947, 0.905308, 0.940777, 0.90335, 0.908764, 0.903678, 
    0.987092, 0.930693, 0.925365, 0.950781, 0.935708, 0.987465, 1.00945, 0.994477, 0.968073, 0.957443, 0.94339, 0.963413, 0.98636, 0.995478, 0.992278, 0.939305, 0.978472, 0.906123, 0.904028, 0.939637, 
    1.00199, 0.924357, 0.923322, 0.958536, 0.95338, 0.991624, 1.00294, 0.998752, 0.988656, 0.958161, 0.948994, 0.981052, 0.995361, 0.995515, 0.992742, 0.945049, 0.975853, 0.938058, 0.92636, 0.944468, 
    0.993657, 0.938806, 0.91982, 0.974586, 0.958026, 0.996849, 1.01373, 1.01047, 0.990458, 0.984426, 0.979069, 0.974292, 1.00349, 1.00309, 1.00331, 0.954354, 0.97658, 0.926021, 0.916948, 0.961441, 
    0.984231, 0.944807, 0.92685, 0.980257, 0.972843, 1.00167, 1.00949, 1.01371, 1.00036, 0.983453, 0.987489, 0.994851, 1.00529, 1.01806, 1.00614, 0.965109, 0.989122, 0.943219, 0.92836, 0.9635, 
    0.990796, 0.943149, 0.929724, 0.981283, 0.977276, 1.00499, 1.01644, 1.0155, 1.00605, 0.994645, 0.990739, 0.994668, 1.01427, 1.0124, 1.00942, 0.967725, 0.971637, 0.943098, 0.93808, 0.967274, 
    0.982231, 0.945478, 0.934989, 0.996595, 0.978374, 0.999149, 1.01389, 1.01726, 1.00217, 0.992896, 0.989919, 0.988654, 1.00572, 1.00709, 1.00566, 0.975828, 0.996625, 0.950826, 0.945587, 0.953887, 
]+[
    0.970701, 0.943924, 0.951893, 0.96202, 0.983763, 0.999807, 1.0121, 1.0167, 1.0004, 0.994883, 0.992199, 0.99312, 1.00378, 1.00942, 1.00243, 0.974722, 0.986224, 0.958307, 0.936046, 0.956053, 
    0.950439, 0.943176, 0.938881, 0.960013, 0.982246, 0.998577, 1.01382, 1.00338, 1.00328, 0.994218, 0.983625, 0.994585, 0.994989, 1.00291, 0.99912, 0.983995, 0.976445, 0.944625, 0.922813, 0.960712, 
    0.962453, 0.954733, 0.944829, 0.990295, 0.979017, 0.997275, 1.00414, 1.01084, 0.997973, 0.996635, 0.993592, 0.991856, 1.00394, 1.00155, 1.00017, 0.975887, 0.990122, 0.948701, 0.945466, 0.946164, 
    0.958695, 0.941507, 0.940249, 0.962102, 0.968755, 0.990369, 0.999871, 0.99676, 0.997418, 0.994858, 0.999261, 0.997343, 0.989836, 0.998038, 1.00029, 0.98322, 1.01, 0.957773, 0.919147, 0.935406, 
    0.939174, 0.956699, 0.928982, 0.981145, 0.973266, 0.992646, 1.00198, 1.00012, 0.989144, 0.980974, 0.983616, 0.984674, 0.977792, 1.00032, 0.983263, 0.976472, 0.944968, 0.967101, 0.954095, 0.962128, 
    0.948074, 0.922059, 0.929238, 0.950404, 0.972797, 1.00277, 0.991917, 0.997751, 1.00466, 0.985132, 0.989998, 0.999034, 0.991822, 0.981114, 1.0006, 0.987479, 0.925542, 0.920968, 0.945208, 0.927901, 
    0.944379, 0.925347, 0.944006, 1.0427, 0.977407, 0.97995, 0.994976, 0.992946, 0.99748, 0.999833, 0.986372, 0.982215, 0.993062, 0.981283, 0.981256, 1.00665, 1.00223, 0.948822, 0.933884, 0.919491, 
    0.888522, 0.944777, 0.924945, 1.0211, 0.974088, 0.996608, 0.984424, 0.995459, 0.994735, 0.996008, 0.982649, 0.981462, 0.975993, 0.984319, 0.991969, 0.990661, 0.990014, 0.909188, 0.905388, 0.93164, 
    0.910805, 0.910805, 0.910805, 0.988727, 0.998785, 0.998785, 0.986359, 0.986359, 1.00847, 1.00847, 0.995881, 0.995881, 0.993049, 0.993049, 1.00463, 1.00463, 0.94165, 0.943316, 0.943316, 0.943316, 
    0.935021, 0.935021, 0.935021, 0.944936, 0.984091, 0.984091, 0.994754, 0.994754, 0.997433, 0.997433, 0.979589, 0.979589, 0.983329, 0.983329, 0.988018, 0.988018, 0.976749, 0.947637, 0.947637, 0.947637, 
    0.932796, 0.932796, 0.932796, 0.974576, 0.98069, 0.98069, 0.978156, 0.978156, 0.996111, 0.996111, 0.981974, 0.981974, 0.989116, 0.989116, 0.980065, 0.980065, 1.01856, 0.933221, 0.933221, 0.933221, 
]
trigSF_Ele27_WPTight_Gsf.errors = [
    0.016758, 0.0248246, 0.031135, 0.0580094, 0.027373, 0.0303783, 0.0360975, 0.0440337, 0.0354063, 0.028887, 0.0366605, 0.0325703, 0.0285488, 0.0324561, 0.022577, 0.0183901, 0.0435612, 0.0285599, 0.0304044, 0.0107452, 
    0.0253692, 0.0256989, 0.0252382, 0.0354708, 0.0204086, 0.0225528, 0.0237866, 0.0229057, 0.0224946, 0.021142, 0.0219588, 0.0210996, 0.0226762, 0.0234581, 0.0218829, 0.0204613, 0.0353032, 0.0255671, 0.0246388, 0.0230971, 
    0.0261064, 0.0264455, 0.0231623, 0.0407994, 0.0214458, 0.0226584, 0.0240385, 0.0225061, 0.0223154, 0.0220184, 0.021131, 0.021849, 0.0225262, 0.0235347, 0.0224103, 0.0219792, 0.0335138, 0.0274771, 0.0241301, 0.0227852, 
    0.0262486, 0.0238573, 0.0230209, 0.0349655, 0.0216573, 0.0224195, 0.0235528, 0.0228303, 0.0231691, 0.0225294, 0.0220809, 0.0234672, 0.0229595, 0.0233743, 0.0228742, 0.0212597, 0.0336452, 0.027256, 0.027091, 0.0237314, 
    0.0248549, 0.0233574, 0.0229148, 0.0273589, 0.0216555, 0.0230114, 0.0235104, 0.0230348, 0.0226736, 0.0224627, 0.0220435, 0.0224703, 0.0229612, 0.0234833, 0.0226599, 0.0222655, 0.0282769, 0.0227648, 0.02266, 0.0233594, 
    0.0248188, 0.0255792, 0.0252884, 0.0269737, 0.021904, 0.0230281, 0.0229439, 0.0232166, 0.02286, 0.0221134, 0.0229977, 0.0229552, 0.0229228, 0.0229877, 0.0225233, 0.0218265, 0.0268957, 0.0235818, 0.0225109, 0.023429, 
    0.0239512, 0.0250807, 0.0221016, 0.025588, 0.0218232, 0.0225591, 0.0235831, 0.0230679, 0.0226297, 0.0225547, 0.0227459, 0.0223532, 0.0229803, 0.0228363, 0.0226983, 0.0216623, 0.0271072, 0.0225099, 0.0219524, 0.0228277, 
    0.0235098, 0.0222889, 0.0218325, 0.0247042, 0.0219958, 0.0226319, 0.0231938, 0.0230843, 0.0226892, 0.0223987, 0.0225121, 0.0225792, 0.0231163, 0.0232266, 0.0226851, 0.0219154, 0.0310913, 0.0224184, 0.021962, 0.0256882, 
    0.024745, 0.0219822, 0.0234363, 0.024785, 0.0222384, 0.0226299, 0.0229759, 0.0229853, 0.0227636, 0.022558, 0.022565, 0.0224985, 0.0234713, 0.0231879, 0.0227894, 0.021927, 0.0239469, 0.0219025, 0.0224777, 0.0253569, 
    0.0236849, 0.0221285, 0.021553, 0.0246438, 0.0223399, 0.0226048, 0.0231177, 0.0230469, 0.0228813, 0.0225488, 0.0240101, 0.0226708, 0.0229809, 0.0227319, 0.0226501, 0.0227792, 0.0275983, 0.0242138, 0.0250423, 0.0244921, 
]+[
    0.023421, 0.023629, 0.0221827, 0.0243988, 0.0222552, 0.0226183, 0.0236664, 0.0232511, 0.0227181, 0.0235953, 0.0228357, 0.0226143, 0.0228783, 0.0228568, 0.0227886, 0.0222472, 0.0272507, 0.0224082, 0.0232531, 0.0227319, 
    0.0243489, 0.0290645, 0.0236936, 0.0289861, 0.0227558, 0.0226216, 0.023751, 0.0237816, 0.0232242, 0.0237623, 0.0226297, 0.0227911, 0.0226907, 0.0230331, 0.0227087, 0.022455, 0.0335884, 0.0227244, 0.023134, 0.0241344, 
    0.0301694, 0.0237677, 0.0271573, 0.0343932, 0.0226941, 0.0226696, 0.0228637, 0.0231895, 0.023174, 0.0232356, 0.0228187, 0.0227295, 0.0230195, 0.0231713, 0.0230054, 0.0221349, 0.0362863, 0.0289302, 0.0260133, 0.0241245, 
    0.0293554, 0.0273064, 0.025549, 0.0359781, 0.0227775, 0.0227447, 0.0254631, 0.0261761, 0.0239268, 0.0246267, 0.0240144, 0.0240335, 0.0237979, 0.0236498, 0.0234681, 0.022894, 0.0488995, 0.0276696, 0.0244074, 0.0283646, 
    0.0310167, 0.0355246, 0.0346215, 0.0532844, 0.0232706, 0.0235022, 0.0252557, 0.0279149, 0.023933, 0.0238896, 0.024642, 0.0247175, 0.0231107, 0.0243717, 0.0232238, 0.0233626, 0.0357741, 0.0301571, 0.028073, 0.0288762, 
    0.0476708, 0.0299717, 0.030709, 0.0442116, 0.0240596, 0.024354, 0.0265339, 0.0264472, 0.026433, 0.0250765, 0.0293261, 0.0280617, 0.0245939, 0.0259739, 0.0238062, 0.0246828, 0.0528054, 0.0302048, 0.0340132, 0.0286482, 
    0.0308678, 0.0283447, 0.0313225, 0.0621742, 0.0234554, 0.0231402, 0.0241053, 0.0239661, 0.0245973, 0.0257068, 0.0256357, 0.0247674, 0.0241731, 0.0232971, 0.023256, 0.0270657, 0.0759315, 0.0293276, 0.0296936, 0.0327706, 
    0.030912, 0.0397432, 0.0306808, 0.0834466, 0.0236614, 0.0243231, 0.0247796, 0.0251513, 0.0254239, 0.0257598, 0.0264032, 0.0248799, 0.0245997, 0.0248552, 0.024908, 0.0252232, 0.0713293, 0.0282229, 0.0317473, 0.0348016, 
    0.0256477, 0.0256477, 0.0256477, 0.0577184, 0.0248649, 0.0248649, 0.0240263, 0.0240263, 0.0256186, 0.0256186, 0.0246508, 0.0246508, 0.025268, 0.025268, 0.0241491, 0.0241491, 0.0655283, 0.0315187, 0.0315187, 0.0315187, 
    0.0262255, 0.0262255, 0.0262255, 0.0583017, 0.0244722, 0.0244722, 0.0240033, 0.0240033, 0.0242837, 0.0242837, 0.0238473, 0.0238473, 0.023671, 0.023671, 0.0233825, 0.0233825, 0.0548827, 0.0279801, 0.0279801, 0.0279801, 
    0.0257933, 0.0257933, 0.0257933, 0.0498968, 0.0226358, 0.0226358, 0.0227176, 0.0227176, 0.0235377, 0.0235377, 0.0230301, 0.0230301, 0.0231913, 0.0231913, 0.0225467, 0.0225467, 0.0698522, 0.0251283, 0.0251283, 0.0251283, 
]

## Combined Scale factors
## id syst 1%+0.5%(quadrature), iso syst 1%
muonSFTightBF = combineSF(combineSF(muonSFTightIdOnly, muonSFTightIsoOnly, (0.01**2+0.005**2)**0.5, 0.01), muonSFTrackingOnly)
muonSFTightGH = combineSF(combineSF(muonSFTightGHIdOnly, muonSFTightGHIsoOnly, (0.01**2+0.005**2)**0.5, 0.01), muonSFTrackingGHOnly)
muonSFTight = computeAverageSF(muonSFTightBF, 20.4, muonSFTightGH, 16.7)
electronSFCutBasedIDMediumWP = combineSF(electronSFRecoOnly, electronSFCutBasedIDMediumWPIdOnly)
electronSFCutBasedIDTightWP = combineSF(electronSFRecoOnly, electronSFCutBasedIDTightWPIdOnly)
trigSF_IsoMu24_OR_IsoTkMu24 = computeAverageSF(trigSF_IsoMu24_OR_IsoTkMu24_BtoF, 20.4, trigSF_IsoMu24_OR_IsoTkMu24_GtoH, 16.7)
